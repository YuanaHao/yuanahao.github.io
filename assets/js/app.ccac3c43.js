"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[3524],{2798:(e,t,a)=>{a.d(t,{l:()=>o});const o={category:{"/":{path:"/category/",map:{ASC:{path:"/category/asc/",indexes:[0,1]},SOSD:{path:"/category/sosd/",indexes:[2,3,4,5]},CS149_Lab:{path:"/category/cs149-lab/",indexes:[6]},CS61A:{path:"/category/cs61a/",indexes:[7]},CSE234:{path:"/category/cse234/",indexes:[8]},Lab:{path:"/category/lab/",indexes:[8]},计算机体系结构:{path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",indexes:[9]},Base:{path:"/category/base/",indexes:[10]},数据结构与算法:{path:"/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/",indexes:[11]},算法与数据结构:{path:"/category/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",indexes:[12]}}}},tag:{"/":{path:"/tag/",map:{TEST:{path:"/tag/test/",indexes:[0,1]},ASC:{path:"/tag/asc/",indexes:[0,1]},"2025competition":{path:"/tag/2025competition/",indexes:[0,1]},分布式系统:{path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/",indexes:[2,3,4,5]},MLSys:{path:"/tag/mlsys/",indexes:[2,8,10,4,5]},并行运算:{path:"/tag/%E5%B9%B6%E8%A1%8C%E8%BF%90%E7%AE%97/",indexes:[2,4,5]},公开课:{path:"/tag/%E5%85%AC%E5%BC%80%E8%AF%BE/",indexes:[8,6]},并行计算:{path:"/tag/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/",indexes:[6]},Lab:{path:"/tag/lab/",indexes:[8,6]},MOOC:{path:"/tag/mooc/",indexes:[7]},CS:{path:"/tag/cs/",indexes:[7]},berkeley:{path:"/tag/berkeley/",indexes:[7]},course:{path:"/tag/course/",indexes:[8]},系统:{path:"/tag/%E7%B3%BB%E7%BB%9F/",indexes:[9]},计算机组成:{path:"/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/",indexes:[9]},Base:{path:"/tag/base/",indexes:[10]},算法:{path:"/tag/%E7%AE%97%E6%B3%95/",indexes:[11,12]},数学:{path:"/tag/%E6%95%B0%E5%AD%A6/",indexes:[11]},分布式推理:{path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8E%A8%E7%90%86/",indexes:[3]},文生图:{path:"/tag/%E6%96%87%E7%94%9F%E5%9B%BE/",indexes:[3]}}}}}},8589:(e,t,a)=>{a.d(t,{M:()=>o});const o=["/posts/0_REPORT.html","/posts/1_REPORT.html","/posts/%E5%A4%A7%E8%A7%84%E6%A8%A1AI%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%8E%A8%E7%90%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%8C%83%E5%BC%8F.html","/posts/%E6%96%87%E7%94%9F%E5%9B%BE.html","/posts/AISys_%E5%88%86%E5%B8%83%E5%BC%8F.html","/posts/MLSys_%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%88%E9%80%89%E8%AF%BB).html","/posts/CS149_asst1.html","/posts/CS61A.html","/posts/CSE234_PA.html","/posts/PA.html","/posts/What_is_Automatic_Differentiation.html","/posts/factorial_Stirling.html","/posts/vjudge_solutions_1.html","/posts/CSE234.html"]},594:(e,t,a)=>{a.d(t,{U:()=>o});const o={article:{"/":{path:"/article/",indexes:[2,8,10,7,9,0,1,3,4,5,6,11,12,13]}},star:{"/":{path:"/star/",indexes:[2,8,10,7,9,0,1,3,4,5,6,11,12]}},timeline:{"/":{path:"/timeline/",indexes:[13,2,8,10,7,9,0,1,3,4,5,6,11,12]}}}},826:(e,t,a)=>{a.d(t,{B:()=>D});var o={};a.r(o);var n={};a.r(n),a.d(n,{default:()=>g});var s={};a.r(s),a.d(s,{default:()=>F});var i={};a.r(i),a.d(i,{default:()=>L});var l={};a.r(l),a.d(l,{default:()=>T});var r=a(8593),d=a(5995),c=a(7076),h=a(1042),E=a(4415),p=a(1703),m=a(7061);const g=(0,r.re)({enhance:({app:e})=>{(0,d.L4)("FontIcon")||e.component("FontIcon",h.A),(0,d.L4)("Badge")||e.component("Badge",E.A),(0,d.L4)("BiliBili")||e.component("BiliBili",p.A),(0,d.L4)("VidStack")||e.component("VidStack",m.A)},setup:()=>{(0,c.r9V)("https://cdn.jsdelivr.net/npm/iconify-icon@1")},rootComponents:[]});var A=a(3284),B=a(1771),u=a(5114),b=a(3234),C=a(9074),f=a(57),S=a(2740),y=a(4507),_=a(628),k=a(1350),v=a(958),I=a(5252),x=a(5221);(0,v.M_)((e=>{const t=e.t,a=!1!==e.I,o=e.i;return a?{title:t,content:o?()=>[(0,I.h)(k.GB,{icon:o}),t]:null,order:e.O,index:e.I}:null}));const F=(0,r.re)({enhance:({app:e,router:t})=>{const{scrollBehavior:a}=t.options;t.options.scrollBehavior=async(...e)=>(await k.lE.wait(),a(...e)),(0,k.fk)(e),e.component("HopeIcon",k.GB),e.component("BloggerInfo",x.tI),e.component("SocialMedias",x.rS)},setup:()=>{(0,k.PV)(),(0,k.i$)(),(0,x.su)()},layouts:{Layout:k.PE,NotFound:k.Mk,BlogCategory:x.Pn,BlogHome:x.qX,BlogType:x.z7,Timeline:x.Kf}});var w=a(904),O=a(1116);const L=(0,r.re)({enhance:({app:e})=>{(0,O.tQ)(e),e.component("Mermaid",w.A)},setup:()=>{}}),P=(0,I.pM)({name:"SocialLink",setup:()=>()=>(0,I.h)("div",{class:"vp-nav-item vp-action"},(0,I.h)("a",{class:"vp-action-link",href:"https://discord.gg/PZTQfJ4GjX",target:"_blank",rel:"noopener noreferrer","aria-label":"discord",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640" style="width:1.25rem;height:1.25rem;vertical-align:middle"><path d=\'m534.42,126.58a1.57,1.57 0 0 0 -0.79,-0.73a507.33,507.33 0 0 0 -125.19,-38.81a1.9,1.9 0 0 0 -2.01,0.95a352.96,352.96 0 0 0 -15.58,32.01a468.41,468.41 0 0 0 -140.6,0a323.75,323.75 0 0 0 -15.82,-32.01a1.98,1.98 0 0 0 -2.02,-0.95a505.9,505.9 0 0 0 -125.19,38.81a1.79,1.79 0 0 0 -0.82,0.7c-79.73,119.07 -101.57,235.21 -90.86,349.9a2.11,2.11 0 0 0 0.81,1.44a510.06,510.06 0 0 0 153.56,77.6a1.99,1.99 0 0 0 2.15,-0.71a364.19,364.19 0 0 0 31.42,-51.08a1.95,1.95 0 0 0 -1.07,-2.71a335.92,335.92 0 0 1 -47.98,-22.85a1.98,1.98 0 0 1 -0.19,-3.27c3.22,-2.42 6.44,-4.93 9.53,-7.46a1.9,1.9 0 0 1 1.99,-0.27c100.65,45.94 209.61,45.94 309.07,0a1.89,1.89 0 0 1 2.01,0.24c3.09,2.54 6.31,5.07 9.55,7.49a1.97,1.97 0 0 1 -0.17,3.27a315.25,315.25 0 0 1 -48,22.83a1.97,1.97 0 0 0 -1.05,2.73a409.02,409.02 0 0 0 31.4,51.05a1.95,1.95 0 0 0 2.15,0.73a508.37,508.37 0 0 0 153.81,-77.59a1.97,1.97 0 0 0 0.81,-1.41c12.82,-132.61 -21.48,-247.79 -90.93,-349.9zm-315.91,280.03c-30.3,0 -55.27,-27.81 -55.27,-61.96s24.48,-61.96 55.27,-61.96c31.03,0 55.76,28.05 55.27,61.96c0,34.15 -24.48,61.96 -55.27,61.96zm204.35,0c-30.3,0 -55.27,-27.81 -55.27,-61.96s24.48,-61.96 55.27,-61.96c31.03,0 55.76,28.05 55.27,61.96c0,34.15 -24.23,61.96 -55.27,61.96z\' fill="currentColor"/></svg>'}))}),T=(0,r.re)({enhance:({app:e})=>{e.component("SocialLink",P)}}),D=[o,n,A,B,u,b,C,f,S,y,_,s,i,l].map((e=>e.default)).filter(Boolean)},6159:(e,t,a)=>{a.d(t,{J:()=>n,c:()=>o});const o=JSON.parse('{"/_posts/0_REPORT.html":"/posts/0_REPORT.html","/_posts/1_REPORT.html":"/posts/1_REPORT.html","/_posts/AISys_%E5%88%86%E5%B8%83%E5%BC%8F.html":"/posts/AISys_%E5%88%86%E5%B8%83%E5%BC%8F.html","/_posts/CS149_asst1.html":"/posts/CS149_asst1.html","/_posts/CS61A.html":"/posts/CS61A.html","/_posts/CSE234.html":"/posts/CSE234.html","/_posts/CSE234_PA.html":"/posts/CSE234_PA.html","/_posts/MLSys_%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%88%E9%80%89%E8%AF%BB).html":"/posts/MLSys_%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%88%E9%80%89%E8%AF%BB).html","/_posts/PA.html":"/posts/PA.html","/_posts/What_is_Automatic_Differentiation.html":"/posts/What_is_Automatic_Differentiation.html","/_posts/factorial_Stirling.html":"/posts/factorial_Stirling.html","/_posts/vjudge_solutions_1.html":"/posts/vjudge_solutions_1.html","/_posts/%E5%A4%A7%E8%A7%84%E6%A8%A1AI%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%8E%A8%E7%90%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%8C%83%E5%BC%8F.html":"/posts/%E5%A4%A7%E8%A7%84%E6%A8%A1AI%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%8E%A8%E7%90%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%8C%83%E5%BC%8F.html","/_posts/%E6%96%87%E7%94%9F%E5%9B%BE.html":"/posts/%E6%96%87%E7%94%9F%E5%9B%BE.html"}'),n=Object.fromEntries([["/blog.html",{loader:()=>a.e(6632).then(a.bind(a,728)),meta:{t:"计算机本科小白",i:"fa6-solid:house-crack"}}],["/intro.html",{loader:()=>a.e(3912).then(a.bind(a,1427)),meta:{t:"个人介绍",i:"fa6-solid:circle-nodes"}}],["/posts/0_REPORT.html",{loader:()=>a.e(4655).then(a.bind(a,1851)),meta:{d:17342208e5,l:"2024年12月15日",c:["ASC"],g:["TEST","ASC","2025competition"],u:!0,e:"<h2>How to find the bugs in the program</h2>\n<blockquote>\n<p>reference: https://nj.gitbooks.io/c/content/content/chapter10/chapter10-chinese.html</p>\n</blockquote>\n<h3>parallel problem bugs</h3>\n<h4>unnecessary block</h4>\n<ul>\n<li>dead lock</li>\n<li>live lock(condition not met)</li>\n<li>I/O block</li>\n</ul>",r:{minutes:4.72,words:1415},t:"ASC2025 TEST_0_CONCURRENCY",O:-1.52,y:"a"}}],["/posts/1_REPORT.html",{loader:()=>a.e(2982).then(a.bind(a,9259)),meta:{d:17342208e5,l:"2024年12月15日",c:["ASC"],g:["TEST","ASC","2025competition"],u:!0,e:'<h2>Installation</h2>\n<p>it\'s easy to finish the envirment settings, so I just talk about some issues occuered.</p>\n<h3>step1: unzip the <code>baseenv.tar.gz</code></h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> baseenv.tar.gz</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:4.21,words:1264},t:"ASC2025 TEST_1_cluster",O:-1.51,y:"a"}}],["/posts/AISys_%E5%88%86%E5%B8%83%E5%BC%8F.html",{loader:()=>a.e(1502).then(a.bind(a,9393)),meta:{d:17300736e5,l:"2024年10月28日",c:["SOSD"],g:["分布式系统","MLSys","并行运算"],u:!0,e:"<h2>为什么AI需要分布式系统</h2>\n<h3>什么是分布式系统</h3>\n<p>分布式系统顾名思义，就是将单一计算机节点要做的任务<code>分布</code>在多个计算机节点上完成的，各个节点之间通过网络进行通讯的计算机系统。</p>\n<p>这种系统的好处是显而易见的，我们可以把一台机器的Task进行切分，可能大幅度<code>提升计算效率</code>；我们可以把一台机器存不下的任务放到多个结点里面，<code>拓展数据规模</code>。</p>\n<p>但同时也可能引入更多的问题，多台机器之间通讯耗费的时间会不会比原先计算的时间更长？切分后的任务如何再将结果重新合在一起？这些都问题都有进一步研究的价值。</p>",r:{minutes:27.34,words:8201},t:"MLSys_分布式开发",O:-1.2,y:"a"}}],["/posts/CS149_asst1.html",{loader:()=>a.e(6181).then(a.bind(a,7473)),meta:{d:17266176e5,l:"2024年9月18日",c:["CS149_Lab"],g:["公开课","并行计算","Lab"],u:!0,e:'<h2>Prog1_mandelbort_threads</h2>\n<h3>环境配置</h3>\n<p>本人使用OS为<code>Ubuntu 22.04</code>, 还是建议使用Linux系统做Lab, 很多环境配置会方便一些.</p>\n<p>CS149_Asst1并不需要额外配置运行环境, 下载解压一下编译环境就好啦!<br>\n下载包:</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>    wget https://github.com/ispc/ispc/releases/download/v1.21.0/ispc-v1.21.0-linux.tar.gz</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:3.33,words:998},t:"CS149 Lab Assignment1",O:-1.01,y:"a"}}],["/posts/CS61A.html",{loader:()=>a.e(972).then(a.bind(a,9028)),meta:{d:1735727299e3,c:["CS61A"],g:["MOOC","CS","berkeley"],u:!0,e:"<h2>week1</h2>\n<h3>Lecture</h3>\n<h4>Welcome</h4>\n<p>The first lecture just a simple explaination of CS61A and explnation of the <code>Expression Tree</code> which is composed of a operator and several operands, so I just paste the picture of the Tree.<br>\n</p>\n<blockquote>\n<p>Easy but interesting.<br>\nIf you learned data structure, you may think this is <code>n-ary tree</code>.</p>\n</blockquote>",r:{minutes:2.68,words:803},t:"CS61A",O:-1.4,y:"a"}}],["/posts/CSE234.html",{loader:()=>a.e(2854).then(a.bind(a,9528)),meta:{d:1750652558e3,e:"<p>MZ��������������������@�����������������������������������(�����\t�!�L�!This program cannot be run in DOS mode.</p>\n<p>$��������������������������������'�����������������������������,��Z����Z���Ӌ�Z�����Z����Z�\n���Z����Rich��������������������������PE��d���1�e����������\" \v�.\f��Z\b�����0x\b�������������������������������������Μ��<code>�����������������������������������</code>��ܩ�&lt;.�P������������Ƞ���h�<code>(�����d���� �T��������������������� �(���� �8�����������@\f�</code>��������������������������.text����,\f�����.\f���������������� ��`.rdata������@\f�����2\f�������������@��@.data���|����@��x���2�������������@�</p>",r:{minutes:.15,words:45},t:"",y:"a"}}],["/posts/CSE234_PA.html",{loader:()=>a.e(4522).then(a.bind(a,4489)),meta:{d:17406144e5,l:"2025年2月27日",c:["CSE234","Lab"],g:["公开课","MLSys","course","Lab"],u:!0,e:"<h2>PA1: Automatic differentiation</h2>\n<h3>Question 1: Auto Diff Library</h3>\n<h4>Part 1: Operators</h4>\n<p>The list of operators that you will need to implement are:</p>\n<ul>\n<li><code>DivOp</code></li>\n<li><code>DivByConstOp</code></li>\n<li><code>TransposeOp</code></li>\n<li><code>ReLUOp</code></li>\n<li><code>SqrtOp</code></li>\n<li><code>PowerOp</code></li>\n<li><code>MeanOp</code></li>\n<li><code>MatMulOp</code></li>\n<li><code>SoftmaxOp</code></li>\n<li><code>LayerNormOp</code></li>\n</ul>",r:{minutes:.94,words:283},t:"CSE234",O:-2.1,y:"a"}}],["/posts/MLSys_%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%88%E9%80%89%E8%AF%BB).html",{loader:()=>a.e(5412).then(a.bind(a,9194)),meta:{d:17300736e5,l:"2024年10月28日",c:["SOSD"],g:["分布式系统","MLSys","并行运算"],u:!0,e:"<h2>序列并行</h2>\n<h3>Megatron</h3>\n<p>Reducing Activation Recomputation in Large Transformer Models</p>\n<p><code>https://arxiv.org/pdf/2205.05198</code></p>\n<h4>Abstract</h4>\n<p>在大模型训练过程中显存占用过大往往成为瓶颈，一般会通过<code>重计算</code>的方式降低显存占用，但会带来额外的计算代价。本文提出<code>sequece parallel(序列并行,简称SP)</code>和<code>selective activation recomputation</code>两种方法，可以结合TP有效减少不必要的计算量。</p>",r:{minutes:10.57,words:3171},t:"MLSys_分布式开发（选读）",O:-1.3,y:"a"}}],["/posts/PA.html",{loader:()=>a.e(1503).then(a.bind(a,9652)),meta:{d:17351712e5,l:"2024年12月26日",c:["计算机体系结构"],g:["系统","计算机组成"],u:!0,e:'<blockquote>\n<p>This blog will begin from the half of PA1\nBecause I thought "STFW" can solve the problems before.\nI have to confirm that I have install the Ubuntu 22.04 for my CS task, so I look through the PA0 in a fast way.</p>\n</blockquote>\n<h2>PA1 The simplest computer</h2>\n<h3>infrastructure</h3>',r:{minutes:1.52,words:456},t:"PA -- A new journey for the OS",O:-3,y:"a"}}],["/posts/What_is_Automatic_Differentiation.html",{loader:()=>a.e(7307).then(a.bind(a,1486)),meta:{d:17406144e5,l:"2025年2月27日",c:["Base"],g:["MLSys","Base"],u:!0,e:"<blockquote>\n<p>Reference: https://huggingface.co/blog/andmholm/what-is-automatic-differentiation</p>\n</blockquote>\n<h2>写在开始之前</h2>\n<p>这篇blog是本人结合Reference对<code>Automatic Differentiation(自动微分)</code>的总结, 目的主要是回顾Machine Learning基础并完成<code>CSE234</code>的PA1, 考虑到CSE234课程要求, 涉及到课程具体代码实现的部分将以注释&amp;伪代码的形式实现, 希望读者能自行实现<code>Automatic Differentiation</code>, Base is not only base.</p>",r:{minutes:8.78,words:2633},t:"What's Automatic Differentiation?",O:-.001,y:"a"}}],["/posts/factorial_Stirling.html",{loader:()=>a.e(9884).then(a.bind(a,4659)),meta:{d:17265312e5,l:"2024年9月17日",c:["数据结构与算法"],g:["算法","数学"],u:!0,e:"<h2>题目引入</h2>\n<blockquote>\n<p>算法与数据结构实验题 1.10 单身狗进化\n这一天晚上，弯通又做梦了，并且梦到了一个帅气的男孩纸！这个男孩给了弯通一个数字 n。男孩离开前告诉弯通，n!（n 的阶乘）的位数就是距离弯通脱单的天数。矜（ji）持（ke）的弯通想知道自己还有多久能脱单，快写个程序帮助他！<br>\n输入:<br>\n输入第一行为一个正整数 n（1&lt;=n&lt;=25000）。<br>\n输出:<br>\nn阶乘的位数</p>\n</blockquote>\n<h2>题目分析</h2>\n<p>这道题看上去还挺有意思的<s>很符合大学生的心理状态</s>, 实际上就是要求阶乘的位数<s>倒也没有拐弯抹角</s>.<br>\n但是我们都知道, 要是用<code>递归</code>或者<code>循环</code>写阶乘, 这将是一件极为恐怖的事情.<br>\n在数据存储(空间复杂度)&amp;计算用时(时间复杂度)上的开销, 将成为任何一台机器的噩梦, 更不可能过测试了.<br>\n举个栗子:</p>",r:{minutes:4.02,words:1207},t:"阶乘的位数估算--数学在计算机算法研究中的作用",O:-.01,y:"a"}}],["/posts/vjudge_solutions_1.html",{loader:()=>a.e(4602).then(a.bind(a,7390)),meta:{d:1705968e6,l:"2024年1月23日",c:["算法与数据结构"],g:["算法"],u:!0,e:"<h2>1. Dragon String (龙字符串)</h2>\n<h3>题目描述</h3>\n<p>给定一个正整数N，要求输出一个特定的字符串，该字符串由一个'L'、N个'o'、一个'n'和一个'g'按顺序组成。</p>\n<h3>约束条件</h3>\n<ul>\n<li>1 ≤ N ≤ 2024</li>\n<li>N为整数</li>\n</ul>\n<h3>解题思路</h3>\n<p>这是一道简单的字符串构造题，主要考察基础的字符串操作和循环控制。解题步骤如下：</p>\n<ol>\n<li>读取输入整数N</li>\n<li>输出字符'L'</li>\n<li>循环N次输出字符'o'</li>\n<li>最后输出字符'n'和'g'</li>\n</ol>",r:{minutes:8.35,words:2506},t:"ACM Try -- 01",O:-.002,y:"a"}}],["/posts/%E5%A4%A7%E8%A7%84%E6%A8%A1AI%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%8E%A8%E7%90%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%8C%83%E5%BC%8F.html",{loader:()=>a.e(206).then(a.bind(a,1548)),meta:{d:1750652558e3,c:["SOSD"],g:["分布式系统","MLSys","并行运算"],u:!0,e:"<h3><strong>摘要</strong></h3>\n<p>随着模型参数规模迈入万亿级别，其在推理（Inference）阶段的部署面临着内存墙（Memory Bound）、计算墙（Compute Bound）与I/O墙（I/O Bound）等多重挑战。本文系统性地梳理和剖析大规模模型推理所采用的高性能并行计算范式。文章首先对数据并行（Data Parallelism, DP）、流水线并行（Pipeline Parallelism, PP）和张量并行（Tensor Parallelism, TP）等基础概念进行界定，并探讨其在推理场景下的应用边界与理论局限。其次，深入探讨了以连续批处理（Continuous Batching）和分页注意力（PagedAttention）为代表的现代推理系统的核心架构演进。在此基础上，本文进一步剖析了模型量化（Quantization）与推测解码（Speculative Decoding）等前沿算法优化。为将理论与实践相结合，本文选取了三个典型案例进行深度研究：面向特定架构的组件级并行（以Stable Diffusion为例）、应对超长上下文挑战的序列并行，以及在复杂单一样本场景下的混合并行策略（以AlphaFold3为例）。最后，通过一个在HPC环境下部署CPU推理集群的工程案例，展示了如何在现实约束下进行系统架构设计。</p>",r:{minutes:27.66,words:8297},t:"大规模AI模型的infer并行计算范式",O:-2,y:"a"}}],["/posts/%E6%96%87%E7%94%9F%E5%9B%BE.html",{loader:()=>a.e(3566).then(a.bind(a,8960)),meta:{d:17335296e5,l:"2024年12月7日",c:["SOSD"],g:["分布式系统","分布式推理","文生图"],u:!0,e:"<h2>文生图</h2>\n<p>随着transformer在文本生成方面逐步展现出的巨大潜力和ChatGPT等生成式对话AI的逐步商业化, 处理多模态任务的价值也不断被挖掘, <code>文生图</code> <code>文生视频</code>等潜力巨大的任务类型开始提上研究日程.</p>\n<p>但是同生成式对话使用有限的文本量便能达成较为不错的生成效果不同, 文生视频和文生图任务由于图形任务的整体性对大块内存的使用提出了更为严苛的要求, 图块与图块 像素与像素之间的高度关联性也难以像文本推理一样通过简单的切分矩阵实现并发, 这使得最为常用的 <code>Diffusion</code>模型在生成时长和内存占用上的表现都差强人意.</p>",r:{minutes:13.13,words:3940},t:"Diffusion（文生图、文生视频）推理服务",O:-1.3,y:"a"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,4329)),meta:{t:""}}],["/",{loader:()=>a.e(4470).then(a.bind(a,220)),meta:{t:""}}],["/posts/",{loader:()=>a.e(8666).then(a.bind(a,8223)),meta:{t:"Posts"}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,6889)),meta:{t:"分类",I:!1}}],["/category/asc/",{loader:()=>a.e(5825).then(a.bind(a,2877)),meta:{t:"ASC 分类",I:!1}}],["/category/sosd/",{loader:()=>a.e(4221).then(a.bind(a,4558)),meta:{t:"SOSD 分类",I:!1}}],["/category/cs149-lab/",{loader:()=>a.e(2420).then(a.bind(a,6973)),meta:{t:"CS149_Lab 分类",I:!1}}],["/category/cs61a/",{loader:()=>a.e(4702).then(a.bind(a,9894)),meta:{t:"CS61A 分类",I:!1}}],["/category/cse234/",{loader:()=>a.e(2350).then(a.bind(a,6002)),meta:{t:"CSE234 分类",I:!1}}],["/category/lab/",{loader:()=>a.e(8399).then(a.bind(a,3527)),meta:{t:"Lab 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",{loader:()=>a.e(3671).then(a.bind(a,6008)),meta:{t:"计算机体系结构 分类",I:!1}}],["/category/base/",{loader:()=>a.e(3257).then(a.bind(a,5975)),meta:{t:"Base 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/",{loader:()=>a.e(9493).then(a.bind(a,3373)),meta:{t:"数据结构与算法 分类",I:!1}}],["/category/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>a.e(1267).then(a.bind(a,5785)),meta:{t:"算法与数据结构 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,943)),meta:{t:"标签",I:!1}}],["/tag/test/",{loader:()=>a.e(7230).then(a.bind(a,1054)),meta:{t:"标签: TEST",I:!1}}],["/tag/asc/",{loader:()=>a.e(6627).then(a.bind(a,4907)),meta:{t:"标签: ASC",I:!1}}],["/tag/2025competition/",{loader:()=>a.e(252).then(a.bind(a,7638)),meta:{t:"标签: 2025competition",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/",{loader:()=>a.e(2956).then(a.bind(a,4649)),meta:{t:"标签: 分布式系统",I:!1}}],["/tag/mlsys/",{loader:()=>a.e(4616).then(a.bind(a,8694)),meta:{t:"标签: MLSys",I:!1}}],["/tag/%E5%B9%B6%E8%A1%8C%E8%BF%90%E7%AE%97/",{loader:()=>a.e(4345).then(a.bind(a,679)),meta:{t:"标签: 并行运算",I:!1}}],["/tag/%E5%85%AC%E5%BC%80%E8%AF%BE/",{loader:()=>a.e(2532).then(a.bind(a,2264)),meta:{t:"标签: 公开课",I:!1}}],["/tag/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/",{loader:()=>a.e(7792).then(a.bind(a,2117)),meta:{t:"标签: 并行计算",I:!1}}],["/tag/lab/",{loader:()=>a.e(1869).then(a.bind(a,2615)),meta:{t:"标签: Lab",I:!1}}],["/tag/mooc/",{loader:()=>a.e(1568).then(a.bind(a,5803)),meta:{t:"标签: MOOC",I:!1}}],["/tag/cs/",{loader:()=>a.e(7348).then(a.bind(a,6121)),meta:{t:"标签: CS",I:!1}}],["/tag/berkeley/",{loader:()=>a.e(9919).then(a.bind(a,7101)),meta:{t:"标签: berkeley",I:!1}}],["/tag/course/",{loader:()=>a.e(3663).then(a.bind(a,6804)),meta:{t:"标签: course",I:!1}}],["/tag/%E7%B3%BB%E7%BB%9F/",{loader:()=>a.e(8472).then(a.bind(a,2716)),meta:{t:"标签: 系统",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/",{loader:()=>a.e(8340).then(a.bind(a,2567)),meta:{t:"标签: 计算机组成",I:!1}}],["/tag/base/",{loader:()=>a.e(8463).then(a.bind(a,7536)),meta:{t:"标签: Base",I:!1}}],["/tag/%E7%AE%97%E6%B3%95/",{loader:()=>a.e(5874).then(a.bind(a,8946)),meta:{t:"标签: 算法",I:!1}}],["/tag/%E6%95%B0%E5%AD%A6/",{loader:()=>a.e(4112).then(a.bind(a,2831)),meta:{t:"标签: 数学",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8E%A8%E7%90%86/",{loader:()=>a.e(5596).then(a.bind(a,7709)),meta:{t:"标签: 分布式推理",I:!1}}],["/tag/%E6%96%87%E7%94%9F%E5%9B%BE/",{loader:()=>a.e(4018).then(a.bind(a,3209)),meta:{t:"标签: 文生图",I:!1}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,2108)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(7199).then(a.bind(a,6313)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,1338)),meta:{t:"时间轴",I:!1}}]])},9354:(e,t,a)=>{a.d(t,{U:()=>o});const o=JSON.parse('{"base":"/","lang":"zh-CN","title":"CS_Blog","description":"算法学习, 计算机公开课博客分享平台。","head":[["link",{"rel":"alternate","type":"application/atom+xml","href":"https://newzone.top/atom.xml","title":"CS_Blog Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://newzone.top/feed.json","title":"CS_Blog JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://newzone.top/rss.xml","title":"CS_Blog RSS Feed"}],["link",{"rel":"icon","href":"/favicon.ico"}]],"locales":{}}')},8120:(e,t,a)=>{a.d(t,{K:()=>o});const o=JSON.parse('{"encrypt":{},"logo":"/logo.svg","license":"CC BY-NC-ND 4.0","copyright":"\\n  版权声明：自由转载 - 非商用 - 非衍生 - 保持署名<a href=\\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh-hans\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">（创意共享 4.0 许可证）</a>|\\n  Copyright © 2024-present YuanaHao</a>\\n  ","displayFooter":true,"breadcrumb":false,"contributors":false,"lastUpdated":true,"editLink":false,"darkmode":"switch","fullscreen":true,"repo":"YuanaHao","repoLabel":"GitHub","repoDisplay":true,"docsDir":"docs","navbarLayout":{"start":["Brand"],"center":["Links"],"end":["Repo","Outlook","Search"]},"pageInfo":["Category","Tag","Word","ReadingTime","PageView"],"blog":{"articleInfo":["Date","PageView","Category","Tag","ReadingTime"],"name":"YuanaHao","avatar":"/img/figure.png","description":"计算机本科小白学习ing","intro":"/intro.html","medias":{"GitHub":"https://github.com/YuanaHao","Wechat":"/img/wechat.png","Email":"mailto:2131693324@qq.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"博客","icon":"fa6-solid:blog","link":"/blog"}],"sidebar":{"":[{"text":"博客文章","icon":"fa6-solid:feather-pointed","prefix":"/_posts/","link":"/blog","collapsible":true,"children":"structure"}],"/apps/topic/":"structure"}}}}')},1878:(e,t,a)=>{a.d(t,{v:()=>o});const o={"/_posts/":["/posts/CSE234.html","/posts/PA.html","/posts/CSE234_PA.html","/posts/%E5%A4%A7%E8%A7%84%E6%A8%A1AI%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%8E%A8%E7%90%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%8C%83%E5%BC%8F.html","/posts/0_REPORT.html","/posts/1_REPORT.html","/posts/CS61A.html","/posts/%E6%96%87%E7%94%9F%E5%9B%BE.html","/posts/MLSys_%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%88%E9%80%89%E8%AF%BB).html","/posts/AISys_%E5%88%86%E5%B8%83%E5%BC%8F.html","/posts/CS149_asst1.html","/posts/factorial_Stirling.html","/posts/vjudge_solutions_1.html","/posts/What_is_Automatic_Differentiation.html"],"/apps/topic/":[]}},8047:(e,t,a)=>{a.d(t,{P:()=>o});const o={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Wechat:'<svg xmlns="http://www.w3.org/2000/svg" class="icon wechat-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2AAE67"/><path fill="#FFF" d="M501 417c-14 0-25-12-25-26s11-26 25-26 26 12 26 26-12 26-26 26m-144 0c-15 0-26-12-26-26s11-26 26-26 25 12 25 26-11 26-25 26m72-150c-120 0-217 82-217 183 0 55 29 104 75 138a15 15 0 0 1 6 11l-1 5-9 37-2 5c0 4 4 8 8 8l4-2 47-27c4-3 8-4 12-4l6 1a255 255 0 0 0 83 10c-5-14-7-29-7-45 0-92 88-166 197-166h9c-16-87-103-154-211-154"/><path fill="#FFF" d="M692 561c-13 0-23-10-23-23 0-12 10-22 23-22 12 0 22 10 22 22 0 13-10 23-22 23m-121 0c-12 0-23-10-23-23 0-12 11-22 23-22s23 10 23 22c0 13-11 23-23 23m179 141c38-28 62-69 62-115 0-84-81-152-181-152s-180 68-180 152 80 152 180 152a212 212 0 0 0 65-9l9 3 40 23 3 1a6 6 0 0 0 6-6l-1-5-8-30v-4c0-4 2-8 5-10"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>'}}},e=>{e.O(0,[2092,7032],(()=>e(e.s=1381))),e.O()}]);